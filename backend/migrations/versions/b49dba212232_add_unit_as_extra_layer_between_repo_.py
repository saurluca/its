"""add unit as extra layer between repo and tasks

Revision ID: b49dba212232
Revises: b15add050986
Create Date: 2025-09-09 13:44:33.626481

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "b49dba212232"
down_revision: Union[str, Sequence[str], None] = "b15add050986"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "unit",
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "repositoryunitlink",
        sa.Column("repository_id", sa.Uuid(), nullable=False),
        sa.Column("unit_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repository.id"],
        ),
        sa.ForeignKeyConstraint(
            ["unit_id"],
            ["unit.id"],
        ),
        sa.PrimaryKeyConstraint("repository_id", "unit_id"),
    )
    op.create_table(
        "unittasklink",
        sa.Column("unit_id", sa.Uuid(), nullable=False),
        sa.Column("task_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["task.id"],
        ),
        sa.ForeignKeyConstraint(
            ["unit_id"],
            ["unit.id"],
        ),
        sa.PrimaryKeyConstraint("unit_id", "task_id"),
    )
    op.drop_table("repositorytasklink")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "repositorytasklink",
        sa.Column("repository_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("task_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repository.id"],
            name=op.f("repositorytasklink_repository_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["task_id"], ["task.id"], name=op.f("repositorytasklink_task_id_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "repository_id", "task_id", name=op.f("repositorytasklink_pkey")
        ),
    )
    op.drop_table("unittasklink")
    op.drop_table("repositoryunitlink")
    op.drop_table("unit")
    # ### end Alembic commands ###
