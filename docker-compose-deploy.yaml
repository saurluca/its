services:
  db:
    image: postgres:17-alpine
    container_name: db
    ports:
      - "5432:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    restart: always

  caddy:
    image: caddy:2.8-alpine
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy:/config
      - ./caddy_data:/data
    command: caddy run --config /config/Caddyfile
    depends_on:
      - backend
      - frontend
    restart: always

  backend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/${GITHUB_REPOSITORY_NAME}-backend:${GITHUB_REF_NAME:-main}
    container_name: backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - docling-serve
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: always

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/${GITHUB_REPOSITORY_NAME}-frontend:${GITHUB_REF_NAME:-main}
    container_name: frontend
    environment:
      - NUXT_PUBLIC_API_BASE=https://tutor.ethz.ch/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: always

  docling-serve:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/${GITHUB_REPOSITORY_NAME}-docling-serve:${GITHUB_REF_NAME:-main}
    container_name: docling-serve
    env_file:
      - .env
    ports:
      - "5001:5001"
    depends_on:
      - db
    labels:
      com.centurylinklabs.watchtower.enable: true
    restart: always

  watchtower:
    image: containrrr/watchtower:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    command: --interval 30 --cleanup --label-enable
    restart: always
# fix auto ref from backend with / ... in frontend.
