"""add repository based access

Revision ID: b6aed319328a
Revises: 2b6e777eb319
Create Date: 2025-08-15 14:44:27.359111

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b6aed319328a"
down_revision: Union[str, Sequence[str], None] = "2b6e777eb319"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "repositoryaccess",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("repository_id", sa.Uuid(), nullable=False),
        sa.Column(
            "access_level",
            sa.Enum("READ", "WRITE", "OWNER", name="accesslevel"),
            nullable=False,
        ),
        sa.Column("granted_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repository.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("repository", sa.Column("owner_id", sa.Uuid(), nullable=True))
    op.create_foreign_key(None, "repository", "user", ["owner_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "repository", type_="foreignkey")
    op.drop_column("repository", "owner_id")
    op.drop_table("repositoryaccess")
    # ### end Alembic commands ###
