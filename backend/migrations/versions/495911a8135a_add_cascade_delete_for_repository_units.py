"""Add cascade delete for repository units

Revision ID: 495911a8135a
Revises: c9a1f0add001
Create Date: 2025-10-07 12:51:40.901675

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "495911a8135a"
down_revision: Union[str, Sequence[str], None] = "c9a1f0add001"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("unit_repository_id_fkey"), "unit", type_="foreignkey")
    op.create_foreign_key(
        None, "unit", "repository", ["repository_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "unit", type_="foreignkey")
    op.create_foreign_key(
        op.f("unit_repository_id_fkey"), "unit", "repository", ["repository_id"], ["id"]
    )
    op.create_table(
        "report",
        sa.Column("report_type", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("url", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("category_tags", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("message", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("user_agent", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("task_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("unit_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["task_id"], ["task.id"], name=op.f("report_task_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["unit_id"], ["unit.id"], name=op.f("report_unit_id_fkey")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("report_user_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("report_pkey")),
    )
    # ### end Alembic commands ###
