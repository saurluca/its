"""convert repo unit from m to n to m to 1

Revision ID: 70c05af27d10
Revises: b49dba212232
Create Date: 2025-09-09 14:16:00.012179

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "70c05af27d10"
down_revision: Union[str, Sequence[str], None] = "b49dba212232"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("repositoryunitlink")
    op.add_column("unit", sa.Column("repository_id", sa.Uuid(), nullable=False))
    op.create_foreign_key(None, "unit", "repository", ["repository_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "unit", type_="foreignkey")
    op.drop_column("unit", "repository_id")
    op.create_table(
        "repositoryunitlink",
        sa.Column("repository_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("unit_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["repository_id"],
            ["repository.id"],
            name=op.f("repositoryunitlink_repository_id_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["unit_id"], ["unit.id"], name=op.f("repositoryunitlink_unit_id_fkey")
        ),
        sa.PrimaryKeyConstraint(
            "repository_id", "unit_id", name=op.f("repositoryunitlink_pkey")
        ),
    )
    # ### end Alembic commands ###
